name: Check for Duplicate Discussions

on:
  discussion:
    types: [created]

jobs:
  check_duplicate:
    runs-on: ubuntu-latest

    steps:
    - name: Set up GitHub CLI
      run: |
        sudo apt-get install jq

    - name: Check for duplicate discussions
      id: check_duplicate
      env:
        GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
      run: |
        NEW_TITLE="${{ github.event.discussion.title }}"

        # Convert the new title to lowercase
        NEW_TITLE_LOWER=$(echo "$NEW_TITLE" | tr '[:upper:]' '[:lower:]')

        # Fetch all existing discussions in the repo and save them to a file
        EXISTING_DISCUSSIONS=$(gh api repos/${{ github.repository }}/discussions --jq '.[] | {title: .title, number: .number}')
        echo "$EXISTING_DISCUSSIONS" > discussions.json

        # Loop through existing discussions to find a matching title
        DUPLICATE_FOUND="false"
        for DISCUSSION in $(cat discussions.json | jq -c '.'); do
          EXISTING_TITLE=$(echo "$DISCUSSION" | jq -r '.title')
          EXISTING_NUMBER=$(echo "$DISCUSSION" | jq -r '.number')

          # Convert the existing title to lowercase for comparison
          EXISTING_TITLE_LOWER=$(echo "$EXISTING_TITLE" | tr '[:upper:]' '[:lower:]')

          if [[ "$EXISTING_TITLE_LOWER" == "$NEW_TITLE_LOWER" ]]; then
            echo "Duplicate found in discussion #$EXISTING_NUMBER"
            DUPLICATE_FOUND="true"
            echo "$EXISTING_NUMBER" > duplicate_number.txt
            break
          fi
        done

        if [[ "$DUPLICATE_FOUND" == "true" ]]; then
          echo "Duplicate discussion detected."
          exit 1
        else
          echo "No duplicate found."
        fi

    - name: Label the older discussion as duplicate
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          old_discussion_number=$(cat duplicate_number.txt)
          github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: old_discussion_number,
            labels: ["duplicate"]
          })

    - name: Add comment to older discussion
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          old_discussion_number=$(cat duplicate_number.txt)
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: old_discussion_number,
            body: "This discussion has been marked as a duplicate of a newer one."
          })
