name: Auto-label new discussions based on category

on:
  discussion:
    types: [created]

permissions:
  discussions: write  # Grants permission to modify discussions
  contents: read      # Required for reading repository contents

jobs:
  label-discussion:
    runs-on: ubuntu-latest
    steps:
      - name: Apply labels based on category
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.G_TOKEN }}
          script: |
            const category = context.payload.discussion.category.name;
            const discussionNodeId = context.payload.discussion.node_id;
            const labelNames = [];

            // Apply specific labels based on the category
            if (category === "Ideas") {
              labelNames.push("Initiatives", "ideas");
            } else if (category === "ServiceNow") {
              labelNames.push("ServiceNow");
            } else {
              labelNames.push("General"); // Apply "General" label for all other categories
            }

            // Fetch the IDs of the labels based on their names
            const labelIds = [];

            for (const labelName of labelNames) {
              const { repository } = await github.graphql(`
                query($owner: String!, $repo: String!, $labelName: String!) {
                  repository(owner: $owner, name: $repo) {
                    label(name: $labelName) {
                      id
                    }
                  }
                }
              `, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                labelName: labelName
              });

              if (repository.label) {
                labelIds.push(repository.label.id);
              } else {
                console.log(`Label '${labelName}' not found in the repository.`);
              }
            }

            if (labelIds.length > 0) {
              // Add labels to the discussion using GraphQL mutation
              await github.graphql(`
                mutation($labelableId: ID!, $labelIds: [ID!]!) {
                  addLabelsToLabelable(input: {labelableId: $labelableId, labelIds: $labelIds}) {
                    clientMutationId
                  }
                }
              `, {
                labelableId: discussionNodeId,
                labelIds: labelIds
              });

              console.log(`Applied labels: ${labelNames.join(', ')}`);
            } else {
              console.log('No labels were applied.');
            }
